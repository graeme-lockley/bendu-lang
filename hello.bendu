type List*[a] = Nil | Cons[a, List[a]]

let value = Cons(1, Nil())

let range*(n) = {
  let helper(i) =
    if i > n -> Nil() 
     | Cons(i, helper(i + 1))

  helper(0)
}

let fold*(xs, f, z) =
  match xs with
  | Nil() -> z
  | Cons(c, cs) -> fold(cs, f, f(z, c))

let foldr*(xs, f, z) =
  match xs with
  | Nil() -> z
  | Cons(c, cs) -> f(c, foldr(cs, f, z))

let sum*(xs) =
  foldr(xs, fn(a, b) = a + b, 0)

println(sum(range(10)))
