uses "./Scanner.llld";

Program
    : {Expression [";"]}
    ;

Expression
    : "let" LetDeclaration {"and" LetDeclaration}
    | "print" "(" [Expression {"," Expression}] ")"
    | "println" "(" [Expression {"," Expression}] ")"
    | "abort" "(" [Expression {"," Expression}] ")"
    | "if" ["|"] Expression "->" Expression {"|" Expression ["->" Expression]}
    | "while" Expression "->" Expression
    | OrExpression
    ;

LetDeclaration
    : LowerID ["(" [LowerID {"," LowerID}] ")"] "=" Expression
    ;

OrExpression
    : Or
    ;

Or
    : AndE {"||" AndE}
    ;

AndE
    : Equality {"&&" Equality}
    ;

Equality
    : Additive [RelOp Additive]
    ;

RelOp
    : "=="
    | "!="
    | "<"
    | "<="
    | ">"
    | ">="
    ;

Additive
    : Multiplicative {("+" | "-") Multiplicative}
    ;

Multiplicative
    : Power {("*" | "/" | "%") Power}
    ;

Power
    : Application {"**" Application}
    ;

Application
    : Factor {"(" [Expression {"," Expression}] ")"}
    ;

Factor
    : "(" [Expression] ")"
    | LowerID
    | LiteralChar
    | LiteralFloat
    | LiteralInt
    | LiteralString
    | "True"
    | "False"
    | "!" Factor
    | "@" Factor
    | "fn" "(" [LowerID {"," LowerID}] ")" ["="] Expression
    ;
